### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.err
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to file mylog.log ###
log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.File=/mylog.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###
#log4j.rootLogger=off, stdout 关闭
log4j.rootLogger=info, stdout

#日志记录器(Logger)是日志处理的核心组件。
#log4j具有5种正常级别(Level)。
#日志记录器(Logger)的可用级别Level (不包括自定义级别 Level)， 以下内容就是摘自log4j API (http://jakarta.apache.org/log4j/docs/api/index.html):
#public static final Level TRACE
#TheTRACELevel designates finer-grained informational events than the DEBUG.Since:1.2.12
#
#static Level DEBUG
#DEBUG Level指出细粒度信息事件对调试应用程序是非常有帮助的。
#
#static Level INFO
#INFO level表明 消息在粗粒度级别上突出强调应用程序的运行过程。
#
#static Level WARN
#WARN level表明会出现潜在错误的情形。
#
#static Level ERROR
#ERROR level指出虽然发生错误事件，但仍然不影响系统的继续运行。
#
#static Level FATAL
#FATAL level指出每个严重的错误事件将会导致应用程序的退出。
#
#另外，还有两个可用的特别的日志记录级别: (以下描述来自log4j API http://jakarta.apache.org/log4j/docs/api/index.html):
#static Level ALL
#ALL Level是最低等级的，用于打开所有日志记录。
#
#static Level OFF
#OFF Level是最高等级的，用于关闭所有日志记录。
