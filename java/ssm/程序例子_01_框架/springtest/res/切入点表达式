切入点表达式用于指定目标对象及其作用位置。
1)execution 方法限定
    execution(modifiers-pattern?
            ret-type-pattern
            declaring-type-pattern?
            name-pattern(param-pattern)
            throws-pattern?)

    execution(public * *(..))表示无要求,只要是 public 修饰的方法就行

    execution(* set*(..))只要以 set 开头的方法,就可以。

    execution(* com.xyz.service.AccountService.*(..))匹配是介个类 com.xyz.service.AccountService.*(..)下的所有方法

    execution(* com.xyz.service.*.*(..))匹配 com.xyz.service 介个包下的所有方法

    execution(* com.xyz.service..*.*(..))注意这个和上面的很像,就多个点儿,表示 service 及其子包下所有方法

(上面的不包括子包)

2)within 类型限定
    within(com.xyz.service.AccountService)限定 com.xyz.service.AccountService 类中所有方法
        和 execution(* com.xyz.service.AccountService.*(..))效果相同

    within(com.xyz.service.*)限定 com.xyz.service 包下的所有方法(不包含子包)

    within(com.xyz.service..*)限定 com.xyz.service 包下的所有方法(包含子包)

3)this/target 特定类型限定实现 AccountService 接口的代理对象的任意连接点

    this(com.xyz.service.AccountService)实现 AccountService 接口的目标对象的任意连接点

    target(com.xyz.service.AccountService)注意 this 和 target 的区别

4)args 方法参数类型限定任何一个只接受一个参数,并且运行时所传入的参数是 Serializable 接口
    args(java.io.Serializable)

5)bean 对 Bean 对象名称限定匹配 bean 对象名称以 service 结尾的对象 bean(*service)